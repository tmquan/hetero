#ifndef DDT_HPP
#define DDT_HPP
#include "helper_math.h"

namespace csmri
{
	////////////////////////////////////////////////////////////////////////////////////////////////////
	enum 
	{ 
		DDT_FORWARD		= 0, 
		DDT_INVERSE		= 1, 
		DDT_LAPLACIAN	= 2,
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Derivation 3D Transform along x direction</summary>
	/// <remarks>	Quan. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void dxt(
		float2* u, 
		float2* dx,
		int dimx, 
		int dimy, 
		int dimz,
		int flag);
	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Derivation 3D Transform along y direction</summary>
	/// <remarks>	Quan. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void dyt(
		float2* u, 
		float2* dy,
		int dimx, 
		int dimy, 
		int dimz,
		int flag);
	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Derivation 3D Transform along z direction</summary>
	/// <remarks>	Quan. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void dzt(
		float2* u, 
		float2* dz,
		int dimx, 
		int dimy, 
		int dimz,
		int flag);
	////////////////////////////////////////////////////////////////////////////////////////////////////
}
#endif